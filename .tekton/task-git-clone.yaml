apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: clone-repo-task
spec:
   params:
     - name: task-pvc
       description: the output pvc - this is the name of the PVC that is mounted for the execution of the task
     - name: repository
       description: the git repo
     - name: branch
       description: the branch for the git repo
       default: master
     - name: continuous-delivery-context-secret
       description: name of the configmap containing the continuous delivery pipeline context secrets
       default: cd-secret
  stepTemplate:
    env:
      - name: GIT_TOKEN
        valueFrom:
          secretKeyRef:
            name: $(params.continuous-delivery-context-secret)
            key: GIT_TOKEN            
  steps:
    - name: git-clone
      image: icr.io/continuous-delivery/pipeline/tekton/alpine-git:latest
      env:
        - name: REPOSITORY
          value: $(params.repository)
        - name: BRANCH
          value: $(params.branch)
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(inputs.params.continuous-delivery-context-secret)
              key: GIT_TOKEN                                 
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          git clone -b $BRANCH $REPOSITORY
          ls -la 
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /steps
          name: steps-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(params.task-pvc)
    - name: steps-volume
      emptyDir: {}
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
        - key: toolchain.json
          path: toolchain.json